services:
  postgres:
    image: 'postgres:latest'
    container_name: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./init-db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - 'POSTGRES_DB=cadence_db'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=secret'
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d cadence_db" ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: 'mongo:latest'
    container_name: mongo
    ports:
      - '27017:27017'
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "mongo --eval 'db.runCommand({ ping: 1 })'" ]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: my-rabbit-host
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./rabbitdata:/var/lib/rabbitmq"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 20s
      retries: 5

#  user-service:
#    build: ./user-service
#    container_name: user-service
#    ports:
#      - '8000:8000'
#    environment:
#      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cadence_db?currentSchema=user_service_schema'
#      - 'SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop'
#    depends_on:
#      postgres:
#        condition: service_healthy
#    networks:
#      - backend
#
#  notification-service:
#    build: ./notification-service
#    container_name: notification-service
#    ports:
#      - '8001:8001'
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
#    networks:
#      - backend
#
#  music-service:
#    build: ./music-service
#    container_name: music-service
#    ports:
#      - '8002:8002'
#    environment:
#      - 'SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/cadence_db'
#    depends_on:
#      mongo:
#        condition: service_started
#    networks:
#      - backend

networks:
  backend:
    name: cadence-backend-network
